{"ast":null,"code":"var _jsxFileName = \"/home/alina/dev/prob/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from '../images/Vector.svg';\nimport React from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport '../pages/index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport api from '../utils/api.js';\nimport ImagePopup from \"./ImagePopup.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport { ProtectedRoute } from './ProtectedRoute.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from \"../utils/auth.js\";\nimport resImg from \"../images/gud.svg\";\nimport errorImg from \"../images/error.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, handleEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, handleAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, handleEditAvatarClick] = React.useState(false);\n  const [selectedCard, handleCardClick] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCardId, setSelectedCardId] = React.useState(null);\n  const [isInfoPopupOpen, handleIsInfoPopupOpen] = React.useState(false);\n  const [messageResult, setMessageResult] = React.useState({\n    text: \"\",\n    image: \"\"\n  });\n\n  const handleRegist = (email, password) => {\n    auth.register(email, password).then(res => {\n      setMessageResult({\n        text: \"Вы успешно зарегистрировались!\",\n        image: resImg\n      }), console.log(\"Успех\", res);\n    }).catch(err => {\n      setMessageResult({\n        text: \"Что-то пошло не так!\",\n        image: errorImg\n      }), console.log(\"Ой ошибка\", err);\n    }).finally(() => {\n      handleIsInfoPopupOpen(true);\n    });\n  }; // константа для отправки не зарегестрированных пользователей в окно регистарции\n\n\n  const [loggedIn, setLoggedIn] = React.useState(false); // изменяем данные пользователя\n\n  function handleUpdateUser(userData) {\n    api.changeUserData(userData.name, userData.about).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // добавляем новый аватар\n\n\n  function handleUpdateAvatar(_ref) {\n    let {\n      avatar\n    } = _ref;\n    api.setProfileAvatar(avatar).then(userAvatar => {\n      setCurrentUser(userAvatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // добавляем новую карточку\n\n\n  function handleAddPlaceSubmit(name, link) {\n    console.log(name, link);\n    api.addNewCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // закрываем все попапы\n\n\n  const closeAllPopups = () => {\n    handleEditAvatarClick(false);\n    handleEditProfileClick(false);\n    handleAddPlaceClick(false);\n    handleCardClick(null);\n    setIsConfirmPopupOpen(false);\n    handleIsInfoPopupOpen(false);\n  }; // загрузка данных польователя на страницу\n\n\n  React.useEffect(() => {\n    const initialPromises = Promise.all([api.getUserData(), api.getInitalCards()]);\n    initialPromises.then(_ref2 => {\n      let [profile, Cards] = _ref2;\n      setCards(Cards);\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // удаляем карточку\n\n  const handleCardDeleteSubmit = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // открываем попап удаления карточки для выбранной карточки\n\n\n  function handleCardDelete(cardId) {\n    setIsConfirmPopupOpen(true);\n    setSelectedCardId(cardId);\n  } // ставим лайк карточке\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  const handleInfoMessage = () => {\n    handleIsInfoPopupOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              children: /*#__PURE__*/_jsxDEV(Main, {\n                onCardDelete: handleCardDelete,\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onCardClick: handleCardClick,\n                onCardLike: handleCardLike,\n                cards: cards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onSuccess: handleInfoMessage,\n              handleRegist: handleRegist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n          isOpen: isConfirmPopupOpen,\n          onClose: closeAllPopups,\n          onSubmit: handleCardDeleteSubmit,\n          cardId: selectedCardId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lBSduAQ1pETBrDPqQr5UHz5g4kM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","Routes","Route","Link","Header","Main","Footer","PopupWithForm","api","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ProtectedRoute","Register","Login","InfoTooltip","auth","resImg","errorImg","App","isEditProfilePopupOpen","handleEditProfileClick","useState","isAddPlacePopupOpen","handleAddPlaceClick","isEditAvatarPopupOpen","handleEditAvatarClick","selectedCard","handleCardClick","currentUser","setCurrentUser","cards","setCards","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCardId","setSelectedCardId","isInfoPopupOpen","handleIsInfoPopupOpen","messageResult","setMessageResult","text","image","handleRegist","email","password","register","then","res","console","log","catch","err","finally","loggedIn","setLoggedIn","handleUpdateUser","userData","changeUserData","name","about","closeAllPopups","handleUpdateAvatar","avatar","setProfileAvatar","userAvatar","handleAddPlaceSubmit","link","addNewCard","newCard","useEffect","initialPromises","Promise","all","getUserData","getInitalCards","profile","Cards","handleCardDeleteSubmit","card","deleteCard","_id","state","filter","c","handleCardDelete","cardId","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","map","handleInfoMessage"],"sources":["/home/alina/dev/prob/mesto-react/src/components/App.js"],"sourcesContent":["import logo from '../images/Vector.svg';\nimport React from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport '../pages/index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport api from '../utils/api.js';\nimport ImagePopup from \"./ImagePopup.js\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport { ProtectedRoute } from './ProtectedRoute.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from \"../utils/auth.js\";\nimport resImg from \"../images/gud.svg\";\nimport errorImg from \"../images/error.svg\";\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, handleEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, handleAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, handleEditAvatarClick] = React.useState(false);\n  const [selectedCard, handleCardClick] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCardId, setSelectedCardId] = React.useState(null);\n  const [isInfoPopupOpen, handleIsInfoPopupOpen] = React.useState(false);\n  const [messageResult, setMessageResult] = React.useState({\n    text: \"\",\n    image: \"\"\n  })\n\n\n  const handleRegist = (email, password) => {\n    auth\n    .register(email, password)\n    .then((res) => {\n      setMessageResult({\n        text: \"Вы успешно зарегистрировались!\",\n        image: resImg\n      }),\n      console.log(\"Успех\", res)\n    })\n    .catch((err) => {\n      setMessageResult({\n        text: \"Что-то пошло не так!\",\n        image: errorImg\n      }),\n      console.log(\"Ой ошибка\", err)\n    })\n    .finally(() => {\n      handleIsInfoPopupOpen(true)\n    })\n  }\n\n  // константа для отправки не зарегестрированных пользователей в окно регистарции\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  // изменяем данные пользователя\n  function handleUpdateUser(userData) {\n    api.changeUserData(userData.name, userData.about)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  // добавляем новый аватар\n  function handleUpdateAvatar({ avatar }) {\n    api.setProfileAvatar(avatar)\n      .then((userAvatar) => {\n        setCurrentUser(userAvatar);\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  // добавляем новую карточку\n  function handleAddPlaceSubmit(name, link) {\n    console.log(name, link)\n    api.addNewCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  // закрываем все попапы\n  const closeAllPopups = () => {\n    handleEditAvatarClick(false);\n    handleEditProfileClick(false);\n    handleAddPlaceClick(false);\n    handleCardClick(null);\n    setIsConfirmPopupOpen(false);\n    handleIsInfoPopupOpen(false);\n  }\n\n  // загрузка данных польователя на страницу\n  React.useEffect(() => {\n    const initialPromises = Promise.all([\n      api.getUserData(),\n      api.getInitalCards()\n    ]);\n\n    initialPromises\n      .then(([profile, Cards]) => {\n        setCards(Cards);\n        setCurrentUser(profile)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n  }, [])\n\n  // удаляем карточку\n  const handleCardDeleteSubmit = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n        closeAllPopups()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  // открываем попап удаления карточки для выбранной карточки\n  function handleCardDelete(cardId) {\n    setIsConfirmPopupOpen(true);\n    setSelectedCardId(cardId)\n  }\n\n  // ставим лайк карточке\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  const handleInfoMessage = () => {\n    handleIsInfoPopupOpen(true)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"background\">\n        <div className=\"page\">\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={\n              <ProtectedRoute loggedIn={loggedIn}>\n                <Main\n                  onCardDelete={handleCardDelete}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  cards={cards}\n                />\n              </ProtectedRoute>\n            }\n            />\n\n           <Route path=\"/sign-up\" element={<Register onSuccess={handleInfoMessage} handleRegist={handleRegist}/>} />\n           <Route path=\"/sign-in\" element={<Login />} />\n          </Routes>\n          <Footer />\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n          <DeleteCardPopup\n            isOpen={isConfirmPopupOpen}\n            onClose={closeAllPopups}\n            onSubmit={handleCardDeleteSubmit}\n            cardId={selectedCardId}\n          />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n\n          <InfoTooltip onClose={closeAllPopups} />\n        </div>\n      </div >\n    </CurrentUserContext.Provider>\n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}