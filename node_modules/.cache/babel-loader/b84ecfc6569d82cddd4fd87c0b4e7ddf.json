{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (passwordUser, emailUser) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: passwordUser,\n      email: emailUser\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const authorization = (password, email) => {\n  console.log(JSON.stringify({\n    password,\n    email\n  }));\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","passwordUser","emailUser","fetch","method","headers","body","JSON","stringify","password","email","then","res","ok","json","Promise","reject","status","authorization","console","log","getContent","token","data"],"sources":["/home/alina/dev/prob/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (passwordUser, emailUser) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password: passwordUser, email: emailUser })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n}\n\nexport const authorization = (password, email) => {\n  console.log(JSON.stringify({ password, email }))\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password, email })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(res => res.json())\n    .then(data => data)\n} "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,SAAf,KAA6B;EACnD,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEC,QAAQ,EAAER,YAAZ;MAA0BS,KAAK,EAAER;IAAjC,CAAf;EAL2B,CAAvB,CAAL,CAOJS,IAPI,CAOEC,GAAD,IAAS;IACb,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAZI,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMC,aAAa,GAAG,CAACT,QAAD,EAAWC,KAAX,KAAqB;EAChDS,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACC,SAAL,CAAe;IAAEC,QAAF;IAAYC;EAAZ,CAAf,CAAZ;EACA,OAAOP,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEC,QAAF;MAAYC;IAAZ,CAAf;EAL2B,CAAvB,CAAL,CAOJC,IAPI,CAOEC,GAAD,IAAS;IACb,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAZI,CAAP;AAcD,CAhBM;AAkBP,OAAO,MAAMI,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOnB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASiB,KAAM;IAF1B;EAF0B,CAAzB,CAAL,CAOJX,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EAPR,EAQJH,IARI,CAQCY,IAAI,IAAIA,IART,CAAP;AASD,CAVM"},"metadata":{},"sourceType":"module"}