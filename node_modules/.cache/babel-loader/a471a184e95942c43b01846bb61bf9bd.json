{"ast":null,"code":"var _jsxFileName = \"/home/alina/dev/prob/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from '../images/Vector.svg';\nimport React from 'react';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport '../pages/index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport api from '../utils/api.js';\nimport ImagePopup from \"./ImagePopup.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport { ProtectedRoute } from './ProtectedRoute.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from \"../utils/auth.js\";\nimport resImg from \"../images/gud.svg\";\nimport errorImg from \"../images/error.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, handleEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, handleAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, handleEditAvatarClick] = React.useState(false);\n  const [selectedCard, handleCardClick] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCardId, setSelectedCardId] = React.useState(null);\n  const [isInfoPopupOpen, handleIsInfoPopupOpen] = React.useState(false);\n  const [messageResult, setMessageResult] = React.useState({\n    text: \"\",\n    image: \"\"\n  }); // константа для отправки не зарегестрированных пользователей в окно регистарции\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const navigate = useNavigate();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true);\n        }\n      }).catch(err => {\n        setLoggedIn(false);\n      });\n    }\n  }\n\n  const handleRegist = (passwordUser, emailUser) => {\n    auth.register(passwordUser, emailUser).then(res => {\n      setMessageResult({\n        text: \"Вы успешно зарегистрировались!\",\n        image: resImg\n      });\n      navigate(\"/sign-in\");\n      console.log(\"Успех\", res);\n    }).catch(res => {\n      setMessageResult({\n        text: \"Что-то пошло не так!Попробуйте ещё раз.\",\n        image: errorImg\n      });\n      console.log(\"Ой ошибка\", res);\n    }).finally(() => {\n      handleIsInfoPopupOpen(true);\n    });\n  };\n\n  const handleAuthorization = (passwordUser, emailUser) => {\n    if (!emailUser || !passwordUser) {\n      return;\n    }\n\n    auth.authorization(passwordUser, emailUser).then(data => {\n      if (data.jwt) {\n        localStorage.setItem('jwt', data.jwt);\n        setLoggedIn(true);\n        console.log(loggedIn);\n        navigate(\"/home\", {\n          replace: true\n        });\n      } else {\n        return;\n      }\n    });\n  }; // изменяем данные пользователя\n\n\n  function handleUpdateUser(userData) {\n    api.changeUserData(userData.name, userData.about).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // добавляем новый аватар\n\n\n  function handleUpdateAvatar(_ref) {\n    let {\n      avatar\n    } = _ref;\n    api.setProfileAvatar(avatar).then(userAvatar => {\n      setCurrentUser(userAvatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // добавляем новую карточку\n\n\n  function handleAddPlaceSubmit(name, link) {\n    console.log(name, link);\n    api.addNewCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // закрываем все попапы\n\n\n  const closeAllPopups = () => {\n    handleEditAvatarClick(false);\n    handleEditProfileClick(false);\n    handleAddPlaceClick(false);\n    handleCardClick(null);\n    setIsConfirmPopupOpen(false);\n    handleIsInfoPopupOpen(false);\n  }; // загрузка данных польователя на страницу\n\n\n  React.useEffect(() => {\n    const initialPromises = Promise.all([api.getUserData(), api.getInitalCards()]);\n    initialPromises.then(_ref2 => {\n      let [profile, Cards] = _ref2;\n      setCards(Cards);\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // удаляем карточку\n\n  const handleCardDeleteSubmit = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // открываем попап удаления карточки для выбранной карточки\n\n\n  function handleCardDelete(cardId) {\n    setIsConfirmPopupOpen(true);\n    setSelectedCardId(cardId);\n  } // ставим лайк карточке\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  const handleInfoMessage = () => {\n    handleIsInfoPopupOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              children: /*#__PURE__*/_jsxDEV(Main, {\n                onCardDelete: handleCardDelete,\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onCardClick: handleCardClick,\n                onCardLike: handleCardLike,\n                cards: cards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onSuccess: handleInfoMessage,\n              onMessge: setMessageResult,\n              handleRegist: handleRegist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleAuthorization: handleAuthorization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n          isOpen: isConfirmPopupOpen,\n          onClose: closeAllPopups,\n          onSubmit: handleCardDeleteSubmit,\n          cardId: selectedCardId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          onClose: closeAllPopups,\n          isOpen: isInfoPopupOpen,\n          messageResult: messageResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Uo5SCXJDWkgjAWdYJq9fIuojfLE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","Routes","Route","Link","useNavigate","Header","Main","Footer","PopupWithForm","api","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ProtectedRoute","Register","Login","InfoTooltip","auth","resImg","errorImg","App","isEditProfilePopupOpen","handleEditProfileClick","useState","isAddPlacePopupOpen","handleAddPlaceClick","isEditAvatarPopupOpen","handleEditAvatarClick","selectedCard","handleCardClick","currentUser","setCurrentUser","cards","setCards","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCardId","setSelectedCardId","isInfoPopupOpen","handleIsInfoPopupOpen","messageResult","setMessageResult","text","image","loggedIn","setLoggedIn","navigate","tokenCheck","jwt","localStorage","getItem","getContent","then","res","catch","err","handleRegist","passwordUser","emailUser","register","console","log","finally","handleAuthorization","authorization","data","setItem","replace","handleUpdateUser","userData","changeUserData","name","about","closeAllPopups","handleUpdateAvatar","avatar","setProfileAvatar","userAvatar","handleAddPlaceSubmit","link","addNewCard","newCard","useEffect","initialPromises","Promise","all","getUserData","getInitalCards","profile","Cards","handleCardDeleteSubmit","card","deleteCard","_id","state","filter","c","handleCardDelete","cardId","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","map","handleInfoMessage"],"sources":["/home/alina/dev/prob/mesto-react/src/components/App.js"],"sourcesContent":["import logo from '../images/Vector.svg';\nimport React from 'react';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport '../pages/index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport api from '../utils/api.js';\nimport ImagePopup from \"./ImagePopup.js\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport { ProtectedRoute } from './ProtectedRoute.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from \"../utils/auth.js\";\nimport resImg from \"../images/gud.svg\";\nimport errorImg from \"../images/error.svg\";\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, handleEditProfileClick] = React.useState(false);\n  const [isAddPlacePopupOpen, handleAddPlaceClick] = React.useState(false);\n  const [isEditAvatarPopupOpen, handleEditAvatarClick] = React.useState(false);\n  const [selectedCard, handleCardClick] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCardId, setSelectedCardId] = React.useState(null);\n  const [isInfoPopupOpen, handleIsInfoPopupOpen] = React.useState(false);\n  const [messageResult, setMessageResult] = React.useState({\n    text: \"\",\n    image: \"\"\n  })\n\n  // константа для отправки не зарегестрированных пользователей в окно регистарции\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const navigate = useNavigate()\n  \n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth\n        .getContent(jwt).then((res) => {\n          if (res) {\n            setLoggedIn(true)\n\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n        })\n      }}\n\n  const handleRegist = (passwordUser, emailUser) => {\n        auth\n          .register(passwordUser, emailUser)\n          .then((res) => {\n            setMessageResult({\n              text: \"Вы успешно зарегистрировались!\",\n              image: resImg\n            });\n            navigate(\"/sign-in\")\n            console.log(\"Успех\", res);\n          })\n          .catch((res) => {\n            setMessageResult({\n              text: \"Что-то пошло не так!Попробуйте ещё раз.\",\n              image: errorImg\n            });\n            console.log(\"Ой ошибка\", res)\n          })\n          .finally(() => {\n            handleIsInfoPopupOpen(true);\n          })\n      }\n\n      const handleAuthorization = (passwordUser, emailUser) => {\n        if (!emailUser || !passwordUser) {\n          return;\n        }\n        auth\n          .authorization(passwordUser, emailUser)\n          .then((data) => {\n            if (data.jwt) {\n              localStorage.setItem('jwt', data.jwt);\n              setLoggedIn(true);\n              console.log(loggedIn);\n              navigate(\"/home\", { replace: true })\n            } else {\n              return;\n            }\n          })\n      }\n\n\n\n      // изменяем данные пользователя\n      function handleUpdateUser(userData) {\n        api.changeUserData(userData.name, userData.about)\n          .then((userData) => {\n            setCurrentUser(userData);\n            closeAllPopups()\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      }\n      // добавляем новый аватар\n      function handleUpdateAvatar({ avatar }) {\n        api.setProfileAvatar(avatar)\n          .then((userAvatar) => {\n            setCurrentUser(userAvatar);\n            closeAllPopups()\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      }\n\n      // добавляем новую карточку\n      function handleAddPlaceSubmit(name, link) {\n        console.log(name, link)\n        api.addNewCard(name, link)\n          .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      }\n\n      // закрываем все попапы\n      const closeAllPopups = () => {\n        handleEditAvatarClick(false);\n        handleEditProfileClick(false);\n        handleAddPlaceClick(false);\n        handleCardClick(null);\n        setIsConfirmPopupOpen(false);\n        handleIsInfoPopupOpen(false);\n      }\n\n      // загрузка данных польователя на страницу\n      React.useEffect(() => {\n        const initialPromises = Promise.all([\n          api.getUserData(),\n          api.getInitalCards()\n        ]);\n\n        initialPromises\n          .then(([profile, Cards]) => {\n            setCards(Cards);\n            setCurrentUser(profile)\n          })\n          .catch(err => {\n            console.log(err)\n          })\n\n      }, [])\n\n      // удаляем карточку\n      const handleCardDeleteSubmit = (card) => {\n        api.deleteCard(card._id)\n          .then(() => {\n            setCards((state) => state.filter((c) => c._id !== card._id));\n            closeAllPopups()\n          })\n          .catch(err => {\n            console.log(err)\n          })\n      }\n\n      // открываем попап удаления карточки для выбранной карточки\n      function handleCardDelete(cardId) {\n        setIsConfirmPopupOpen(true);\n        setSelectedCardId(cardId)\n      }\n\n      // ставим лайк карточке\n      function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api\n          .changeLikeCardStatus(card._id, !isLiked)\n          .then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n          })\n          .catch((err) => console.log(err));\n      }\n\n      const handleInfoMessage = () => {\n        handleIsInfoPopupOpen(true)\n      }\n\n      return (\n        <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"background\">\n            <div className=\"page\">\n              <Header />\n              <Routes>\n                <Route path=\"/\" element={\n                  <ProtectedRoute loggedIn={loggedIn}>\n                    <Main\n                      onCardDelete={handleCardDelete}\n                      onEditAvatar={handleEditAvatarClick}\n                      onEditProfile={handleEditProfileClick}\n                      onAddPlace={handleAddPlaceClick}\n                      onCardClick={handleCardClick}\n                      onCardLike={handleCardLike}\n                      cards={cards}\n                    />\n                  </ProtectedRoute>\n                }\n                />\n\n                <Route path=\"/sign-up\" element={<Register onSuccess={handleInfoMessage} onMessge={setMessageResult} handleRegist={handleRegist} />} />\n                <Route path=\"/sign-in\" element={<Login handleAuthorization={handleAuthorization} />} />\n              </Routes>\n              <Footer />\n              <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n              <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n              <DeleteCardPopup\n                isOpen={isConfirmPopupOpen}\n                onClose={closeAllPopups}\n                onSubmit={handleCardDeleteSubmit}\n                cardId={selectedCardId}\n              />\n              <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n              <ImagePopup\n                card={selectedCard}\n                onClose={closeAllPopups}\n              />\n\n              <InfoTooltip onClose={closeAllPopups} isOpen={isInfoPopupOpen} messageResult={messageResult} />\n            </div>\n          </div >\n        </CurrentUserContext.Provider>\n\n\n      );\n    }\n\n    export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}