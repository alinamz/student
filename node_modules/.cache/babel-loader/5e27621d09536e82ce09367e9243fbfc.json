{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (passwordUser, emailUser) => {\n  console.log(JSON.stringify({\n    password: passwordUser,\n    email: emailUser\n  }));\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: passwordUser,\n      email: emailUser\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const authorization = (passwordUser, emailUser) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      passwordUser,\n      emailUser\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","register","passwordUser","emailUser","console","log","JSON","stringify","password","email","fetch","method","headers","body","then","res","ok","json","Promise","reject","status","authorization","data","jwt","localStorage","setItem"],"sources":["/home/alina/dev/prob/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (passwordUser, emailUser) => {\n  console.log(JSON.stringify({ password: passwordUser, email: emailUser}))\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ password: passwordUser, email: emailUser})\n  })\n  .then((res) => {\n      if (res.ok){\n        return res.json();\n      } \n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n}\n\nexport const authorization = (passwordUser, emailUser) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ passwordUser, emailUser })\n  })\n  .then((res) => {\n    if (res.ok){\n      return res.json();\n    } \n    return Promise.reject(`Ошибка: ${res.status}`)\n  })\n  .then((data) => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    } else {\n      return;\n    }\n  })\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,SAAf,KAA6B;EACnDC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe;IAAEC,QAAQ,EAAEN,YAAZ;IAA0BO,KAAK,EAAEN;EAAjC,CAAf,CAAZ;EACA,OAAOO,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;IACjCW,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAe;MAAEC,QAAQ,EAAEN,YAAZ;MAA0BO,KAAK,EAAEN;IAAjC,CAAf;EAL2B,CAAvB,CAAL,CAONW,IAPM,CAOAC,GAAD,IAAS;IACX,IAAIA,GAAG,CAACC,EAAR,EAAW;MACT,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAZI,CAAP;AAaD,CAfM;AAiBP,OAAO,MAAMC,aAAa,GAAG,CAACnB,YAAD,EAAeC,SAAf,KAA6B;EACxD,OAAOO,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;IACjCW,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAe;MAAEL,YAAF;MAAgBC;IAAhB,CAAf;EAL2B,CAAvB,CAAL,CAONW,IAPM,CAOAC,GAAD,IAAS;IACb,IAAIA,GAAG,CAACC,EAAR,EAAW;MACT,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAZM,EAaNN,IAbM,CAaAQ,IAAD,IAAU;IACd,IAAIA,IAAI,CAACC,GAAT,EAAc;MACZC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,GAAjC;MACA,OAAOD,IAAP;IACD,CAHD,MAGO;MACL;IACD;EACF,CApBM,CAAP;AAqBD,CAtBM"},"metadata":{},"sourceType":"module"}