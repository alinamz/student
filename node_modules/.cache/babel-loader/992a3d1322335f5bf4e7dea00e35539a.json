{"ast":null,"code":"export default class api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  _fetch(partUrl) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return fetch(`${this._baseUrl}${partUrl}`, {\n      headers: this._headers,\n      method: method,\n      body: body\n    }).then(res => {\n      if (res.ok) return res.json();\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitalCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => res.json());\n  }\n\n  getUserData() {\n    return this._fetch('/users/me');\n  }\n\n  changeUserData(nameUser, aboutUser) {\n    return this._fetch('/users/me', 'PATCH', JSON.stringify({\n      name: nameUser,\n      about: aboutUser\n    }));\n  }\n\n  addNewCard(nameCard, linkCard) {\n    return this._fetch(\"/cards\", \"POST\", JSON.stringify({\n      name: nameCard,\n      link: linkCard\n    }));\n  }\n\n  deleteCard(cardId) {\n    return this._fetch(`/cards/${cardId}`, \"DELETE\");\n  }\n\n  addLike(card) {\n    return this._fetch(`/cards/${card._cardID}/likes`, \"PUT\");\n  }\n\n  removeLike(card) {\n    return this._fetch(`/cards/${card._cardID}/likes`, \"DELETE\");\n  }\n\n  setProfileAvatar(_ref) {\n    let {\n      info\n    } = _ref;\n    const obj = {\n      \"avatar\": info\n    };\n    return this._fetch('/users/me/avatar', 'PATCH', JSON.stringify(obj));\n  }\n\n}","map":{"version":3,"names":["api","constructor","config","_baseUrl","baseUrl","_headers","headers","_fetch","partUrl","method","body","fetch","then","res","ok","json","Promise","reject","status","getInitalCards","getUserData","changeUserData","nameUser","aboutUser","JSON","stringify","name","about","addNewCard","nameCard","linkCard","link","deleteCard","cardId","addLike","card","_cardID","removeLike","setProfileAvatar","info","obj"],"sources":["/home/alina/dev/prob/mesto-react/src/utils/api.js"],"sourcesContent":["export default class api {\n    constructor(config) {\n        this._baseUrl = config.baseUrl;\n        this._headers = config.headers;\n    }\n\n    _fetch(partUrl, method = 'GET', body = null) {\n        return fetch(`${this._baseUrl}${partUrl}`, {\n            headers: this._headers,\n            method: method,\n            body: body\n        })\n            .then(res => {\n                if (res.ok) return res.json();\n                return Promise.reject(`Ошибка: ${res.status}`);\n            })\n    }\n\n    getInitalCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        }).then(res => res.json());\n    }\n\n    getUserData() {\n        return this._fetch('/users/me');\n    }\n\n    changeUserData(nameUser, aboutUser) {\n        return this._fetch(\n            '/users/me',\n            'PATCH',\n            JSON.stringify({\n                name: nameUser,\n                about: aboutUser\n            }))\n    }\n\n    addNewCard(nameCard, linkCard) {\n        return this._fetch(\n            \"/cards\",\n            \"POST\",\n            JSON.stringify({\n                name: nameCard,\n                link: linkCard\n            }))\n    }\n\n    deleteCard(cardId) {\n        return this._fetch(\n            `/cards/${cardId}`,\n            \"DELETE\"\n        )\n    }\n\n    addLike(card) {\n        return this._fetch(\n            `/cards/${card._cardID}/likes`,\n            \"PUT\");\n    }\n\n    removeLike(card) {\n        return this._fetch(\n            `/cards/${card._cardID}/likes`,\n            \"DELETE\");\n    }\n\n    setProfileAvatar({ info }) {\n        const obj = { \"avatar\": info }\n        return this._fetch(\n            '/users/me/avatar',\n            'PATCH',\n            JSON.stringify(obj))\n    }\n\n}"],"mappings":"AAAA,eAAe,MAAMA,GAAN,CAAU;EACrBC,WAAW,CAACC,MAAD,EAAS;IAChB,KAAKC,QAAL,GAAgBD,MAAM,CAACE,OAAvB;IACA,KAAKC,QAAL,GAAgBH,MAAM,CAACI,OAAvB;EACH;;EAEDC,MAAM,CAACC,OAAD,EAAuC;IAAA,IAA7BC,MAA6B,uEAApB,KAAoB;IAAA,IAAbC,IAAa,uEAAN,IAAM;IACzC,OAAOC,KAAK,CAAE,GAAE,KAAKR,QAAS,GAAEK,OAAQ,EAA5B,EAA+B;MACvCF,OAAO,EAAE,KAAKD,QADyB;MAEvCI,MAAM,EAAEA,MAF+B;MAGvCC,IAAI,EAAEA;IAHiC,CAA/B,CAAL,CAKFE,IALE,CAKGC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP;MACZ,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;IACH,CARE,CAAP;EASH;;EAEDC,cAAc,GAAG;IACb,OAAOR,KAAK,CAAE,GAAE,KAAKR,QAAS,QAAlB,EAA2B;MACnCG,OAAO,EAAE,KAAKD;IADqB,CAA3B,CAAL,CAEJO,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EAFR,CAAP;EAGH;;EAEDK,WAAW,GAAG;IACV,OAAO,KAAKb,MAAL,CAAY,WAAZ,CAAP;EACH;;EAEDc,cAAc,CAACC,QAAD,EAAWC,SAAX,EAAsB;IAChC,OAAO,KAAKhB,MAAL,CACH,WADG,EAEH,OAFG,EAGHiB,IAAI,CAACC,SAAL,CAAe;MACXC,IAAI,EAAEJ,QADK;MAEXK,KAAK,EAAEJ;IAFI,CAAf,CAHG,CAAP;EAOH;;EAEDK,UAAU,CAACC,QAAD,EAAWC,QAAX,EAAqB;IAC3B,OAAO,KAAKvB,MAAL,CACH,QADG,EAEH,MAFG,EAGHiB,IAAI,CAACC,SAAL,CAAe;MACXC,IAAI,EAAEG,QADK;MAEXE,IAAI,EAAED;IAFK,CAAf,CAHG,CAAP;EAOH;;EAEDE,UAAU,CAACC,MAAD,EAAS;IACf,OAAO,KAAK1B,MAAL,CACF,UAAS0B,MAAO,EADd,EAEH,QAFG,CAAP;EAIH;;EAEDC,OAAO,CAACC,IAAD,EAAO;IACV,OAAO,KAAK5B,MAAL,CACF,UAAS4B,IAAI,CAACC,OAAQ,QADpB,EAEH,KAFG,CAAP;EAGH;;EAEDC,UAAU,CAACF,IAAD,EAAO;IACb,OAAO,KAAK5B,MAAL,CACF,UAAS4B,IAAI,CAACC,OAAQ,QADpB,EAEH,QAFG,CAAP;EAGH;;EAEDE,gBAAgB,OAAW;IAAA,IAAV;MAAEC;IAAF,CAAU;IACvB,MAAMC,GAAG,GAAG;MAAE,UAAUD;IAAZ,CAAZ;IACA,OAAO,KAAKhC,MAAL,CACH,kBADG,EAEH,OAFG,EAGHiB,IAAI,CAACC,SAAL,CAAee,GAAf,CAHG,CAAP;EAIH;;AAzEoB"},"metadata":{},"sourceType":"module"}